// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// Criar uma migration: yarn prisma migrate dev [--name init]
model User{
  id String @id @default(uuid())
  name String
  email String
  password String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now()) @updatedAt

  @@map("users")
}

model Category{
  id String @id @default(uuid())
  name String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now()) @updatedAt
  categories Product[]

  @@map("categories")
}

model Product{
  id String @id @default(uuid())
  name String
  price Float
  description String
  banner String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now()) @updatedAt
  
  category_id String
  category Category @relation(fields: [category_id], references: [id])
  
  @@map("products")
  OrderItem OrderItem[]
}

model Order{
  id String @id @default(uuid())
  table Int
  status Boolean @default(false)
  draft Boolean @default(true)
  name String?

  OrderItem OrderItem[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now()) @updatedAt
  @@map("orders")
}

model OrderItem{
  id String @id @default(uuid())
  amount Int
  price Float // <- Salva o preÃ§o do produto no momento da compra
  order_id String
  order Order @relation(fields: [order_id], references: [id], onDelete:Cascade, onUpdate: Cascade)

  product_id String
  product Product @relation(fields: [product_id], references: [id])
  

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now()) @updatedAt
  @@map("orderitems")
}
